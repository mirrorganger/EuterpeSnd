name: Build and Test

on:
  push:
    branches: [ "feature/cmake_presets" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-24.04 
    strategy:
      matrix:
        compiler : [gcc, clang]
        configuration : [debug, release, coverage]

        exclude:
          - compiler: clang
            configuration: coverage

    steps:
    - name : install ninja build 
      run  : sudo apt-get install -y ninja-build

    - name : install alsa 
      run  : sudo apt-get install -y libasound2-dev

    - name : install lcov
      run  : sudo apt-get install -y lcov

    - name : install gcovr
      run : pip install --break-system-packages --user gcovr

    - uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Configure CMake
      run: cmake --preset=${{matrix.compiler}}-${{matrix.configuration}}

    - name: Build
      run: cmake --build --preset=${{matrix.compiler}}-${{matrix.configuration}} 

    - if: matrix.configuration != coverage
      name : Run tests
      run : GTEST_COLOR=1 ctest --preset=${{matrix.compiler}}-${{matrix.configuration}} --verbose

    - if: matrix.configuration == coverage
      name: Generate a code coverage report
      working-directory:  ${{github.workspace}}/build/${{matrix.compiler}}-${{matrix.configuration}}
      run :
        gcovr -r ${{github.workspace}} --print-summary --xml-pretty --xml coverage.xml --exclude *_deps*

    - if: matrix.configuration == coverage
      name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v4
      with:
        token: ${{secrets.CODECOV_TOKEN}}
        file:  ${{github.workspace}}/build/${{matrix.compiler}}-${{matrix.configuration}}/coverage.xml

    ## https://gcovr.com/en/stable/guide/compiling.html?      
    # - name : Create coverage report
    #   run : |
    #         lcov --directory ${{github.workspace}}/build/gcc-release --capture --output=${{github.workspace}}/build/gcc-release/lcov.info
    #         lcov --remove ${{github.workspace}}/build/gcc-release/lcov.info '*deps/*' '/usr/include/*' '*/*Test*' --output-file ${{github.workspace}}/build/gcc-release/lcov.info
    # - name: Upload coverage reports to Codecov
    #   uses: codecov/codecov-action@v4
    #   with:
    #     token: ${{secrets.CODECOV_TOKEN}}
    #     file:  ${{github.workspace}}/build/gcc-release/lcov.info
